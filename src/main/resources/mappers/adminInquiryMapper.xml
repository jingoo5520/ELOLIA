<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalProject.mappers.adminInquiryMapper">

	<!-- 문의 총 개수 가져오기 -->
	<select id="selectInquiryCnt" resultType="int">
		select count(*) from
		inquiries;
	</select>

	<!-- 관리자 뷰 문의 리스트 가져오기(with pagingInfo) -->
	<select id="selectAllInquiryWithPi"
		resultType="InquiryDetailDTO">
		select
		i.inquiry_no, i.member_id, i.product_no, i.inquiry_title,
		i.inquiry_content, i.inquiry_reg_date, i.inquiry_status, i.inquiry_type, m.member_name
		from inquiries i join members m on i.member_id = m.member_id
		order by i.inquiry_no desc
		limit #{startRowIndex},
		#{viewDataCntPerPage}
	</select>

	<!-- 문의 가져오기 -->
	<select id="selectInquiry" resultType="InquiryDetailDTO">
		select
		i.inquiry_no,
		i.member_id,
		i.product_no,
		i.inquiry_title,
		i.inquiry_content,
		i.inquiry_reg_date,
		i.inquiry_status,
		i.inquiry_type,
		p.product_name
		from
		inquiries i
		left join products p on i.product_no = p.product_no
		where
		i.inquiry_no = #{inquiry_no}
	</select>

	<!-- 문의 이미지 가져오기 -->
	<select id="selectInquiryImgList" resultType="InquiryImgDTO">
		select inquiry_no,
		inquiry_image_no,
		inquiry_image_uri, inquiry_image_name,
		inquiry_image_original_name
		from inquiry_images
		where
		inquiry_no =
		#{inquiry_no}
	</select>

	<!-- 문의 답글 가져오기 -->
	<select id="selectInquiryReply" resultType="InquiryReplyDTO">
		select
		inquiry_reply_no, inquiry_no, reply_content, reply_reg_date, admin_id
		from inquiry_replies
		where inquiry_no = #{inquiry_no}
	</select>

	<!-- 문의 답글 작성 -->
	<insert id="insertInquiryReply">
		insert into inquiry_replies
		(inquiry_no, reply_content, admin_id)
		values
		(#{inquiry_no}, #{reply_content},
		#{admin_id})
	</insert>

	<!-- 문의 답글 수정하기 -->
	<update id="updateInquiryReply">
		update inquiry_replies
		set
		reply_content =
		#{reply_content}
		where inquiry_reply_no = #{inquiry_reply_no}
	</update>

	<!-- 문의 답글 작성 후 문의 상태 변경 -->
	<update id="updateInquiryStatus">
		update inquiries
		set
		inquiry_status = 'C'
		where
		inquiry_no = #{inquiryNo}
	</update>

	<!-- 문의 총 개수 가져오기(필터) -->
	<select id="selectFilteredMemberCnt" resultType="int">
		select count(*)
		from inquiries i join members m on i.member_id = m.member_id
		where 1=1
		<if test="statuses != null and statuses.length > 0">
			and (
			<foreach item="status" collection="statuses" separator=" OR ">
				i.inquiry_status
				= #{status}
			</foreach>
			)
		</if>

		<if test="types != null and types.length > 0">
			and (
			<foreach item="type" collection="types" separator=" OR ">
				i.inquiry_type = #{type}
			</foreach>
			)
		</if>

		<if test="member_id != null and member_id != ''">
			AND i.member_id LIKE CONCAT('%', #{member_id}, '%')
		</if>

		<if test="member_name != null and member_name != ''">
			AND m.member_name LIKE CONCAT('%', #{member_name}, '%')
		</if>
		
		<![CDATA[
		and i.inquiry_reg_date >= #{regDate_start}
		and i.inquiry_reg_date <= #{regDate_end}
		]]>
	</select>

	<!-- 문의 리스트 가져오기(필터) -->
	<select id="selectFilteredInquiryList"
		resultType="InquiryDetailDTO">
		select i.inquiry_no, i.member_id, i.inquiry_title, i.inquiry_reg_date,
		i.inquiry_status, i.inquiry_type, m.member_name
		from inquiries i join members m on i.member_id = m.member_id
		where 1=1
		<if test="dto.statuses != null and dto.statuses.length > 0">
			and (
			<foreach item="status" collection="dto.statuses"
				separator=" OR ">
				i.inquiry_status
				= #{status}
			</foreach>
			)
		</if>

		<if test="dto.types != null and dto.types.length > 0">
			and (
			<foreach item="type" collection="dto.types" separator=" OR ">
				i.inquiry_type = #{type}
			</foreach>
			)
		</if>

		<if test="dto.member_id != null and dto.member_id != ''">
			AND i.member_id LIKE CONCAT('%', #{dto.member_id}, '%')
		</if>

		<if test="dto.member_name != null and dto.member_name != ''">
			AND m.member_name LIKE CONCAT('%', #{dto.member_name}, '%')
		</if>
		
		<![CDATA[
		and i.inquiry_reg_date >= #{dto.regDate_start}
		and i.inquiry_reg_date <= #{dto.regDate_end}
		]]>

		order by i.inquiry_reg_date desc
		limit #{pi.startRowIndex},
		#{pi.viewDataCntPerPage}
	</select>
</mapper>