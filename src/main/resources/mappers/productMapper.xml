<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.final_project.mappers.productMapper">
   <!-- 쿼리문 -->
<!-- 생성일에 따른 모든 상품 나열 -->
	<select id="selectProductsByPage" parameterType="map" resultType="ProductDTO">
	    select p.product_no, p.product_name, p.product_price, p.product_category, p.dc_rate, p.product_dc_type,
	           max(pi.image_main_url) as image_main_url, c.category_name
	    from products p
	    join product_images pi on p.product_no = pi.product_no
	    join categories c on p.product_category = c.category_no
	    where p.product_delete = 'N'
	    group by p.product_no, p.product_name, p.product_price, p.product_category, c.category_name
	    order by p.product_reg_date desc
	    limit #{limit} offset #{offset}
	</select>
	
	<select id="selectProductCount" resultType="int">
	        select count(*) 
		    from products 
		    where product_delete = 'N'
		    <if test="category != null">
		        and category = #{category}
		    </if>
	</select>
	
<!-- 카테고리별 상품 조회 쿼리문: 정렬 기준 추가 -->
<select id="selectProductsByCategoryAndPage" parameterType="map" resultType="ProductDTO">
    select p.product_no, p.product_name, p.product_price, p.product_category, 
           max(pi.image_main_url) as image_main_url, 
           c.category_name
    from products p
    left join product_images pi on p.product_no = pi.product_no
    join categories c on p.product_category = c.category_no
    where p.product_delete = 'N'
    <if test="category != null">
        and p.product_category = #{category}  <!-- 카테고리 번호로 필터 -->
    </if>
    group by p.product_no, p.product_name, p.product_price, p.product_category, c.category_name
    <!-- 정렬 기준 추가 -->
    <choose>
        <when test="sortOrder == 'new'">
            order by p.product_reg_date desc  <!-- 신상품순 -->
        </when>
        <when test="sortOrder == 'popular'">
            order by p.product_sell_count desc  <!-- 인기상품순 (판매 수 기준) -->
        </when>
        <when test="sortOrder == 'lowPrice'">
            order by p.product_price asc  <!-- 낮은가격순 -->
        </when>
        <when test="sortOrder == 'highPrice'">
            order by p.product_price desc  <!-- 높은가격순 -->
        </when>
        <otherwise>
            order by p.product_reg_date desc  <!-- 기본: 신상품순 -->
        </otherwise>
    </choose>
    limit #{limit} offset #{offset}
</select>

<!-- 전체 상품 개수 조회 쿼리문 -->
	<select id="selectProductCountByCategory" parameterType="int" resultType="int">
	    select count(*) 
	    from products p
	    where p.product_delete = 'N'
	    <if test="category != null">
	        and p.product_category = #{category}  <!-- 카테고리 번호로 필터 -->
	    </if>
	</select>
	
	
	<select id="getProductById" parameterType="int" resultType="ProductDTO">
	    select p.*,c.*,pi.* from products p
	    left join categories c on p.product_category = c.category_no
	    left join product_images pi on p.product_no = pi.product_no
	    where p.product_no = #{productId}
	</select>
	
	<select id="selectProductDetailById" parameterType="int" resultType="ProductDTO">
    SELECT p.*, c.category_name 
    FROM products p
    LEFT JOIN categories c ON p.product_category = c.category_no
    WHERE p.product_no = #{productId}
</select>
   
</mapper>