<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalProject.mappers.adminCancleMapper">
	<select id="getAllCancle"
		resultType="com.finalProject.model.admin.order.AdminCancleVO">
		select * from cancels group by order_id 
		limit #{startRowIndex} , #{viewPostCntPerPage}
	
	</select>
	<select id="getCountAllCancle" resultType="int">
		SELECT COUNT(DISTINCT order_id) FROM cancels;
	</select>
	<select id="getCountSearchCancle" resultType="int">
		SELECT COUNT(DISTINCT order_id) from cancels
		<where>
			<if test="cancel_type != null and cancel_type.size() > 0">
				and cancel_type in
				<foreach item="type" collection="cancel_type" open="("
					separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test="cancel_status != null and cancel_status.size() > 0">
				and cancel_status in
				<foreach item="status" collection="cancel_status" open="("
					separator="," close=")">
					#{status}
				</foreach>
			</if>
			<if
				test="cancel_apply_date_start != null and cancel_apply_date_start != ''">
				AND cancel_apply_date &gt;= #{cancel_apply_date_start}
			</if>
			<if
				test="cancel_apply_date_end != null and cancel_apply_date_end != ''">
				AND cancel_apply_date &lt;= #{cancel_apply_date_end}
			</if>
		</where>
	</select>

	<select id="getTopCancle"
		resultType="com.finalProject.model.admin.order.AdminCancleVO">
		select * from cancels where cancel_status = '취소 요청' group
		by order_id order by cancel_apply_date desc limit
		8
	</select>

	<select id="searchCancel"
		resultType="com.finalProject.model.admin.order.AdminCancleVO">
		select cancel_no,order_product_no ,order_id, cancel_apply_date,
		cancel_complete_date,cancel_retract_date,cancel_type,cancel_status,cancel_reason
		from cancels where 1=1
		<if test="cancel_type != null and cancel_type.size() > 0">
			and cancel_type in
			<foreach item="type" collection="cancel_type" open="("
				separator="," close=")">
				#{type}
			</foreach>
		</if>
		<if test="cancel_status != null and cancel_status.size() > 0">
			and cancel_status in
			<foreach item="status" collection="cancel_status" open="("
				separator="," close=")">
				#{status}
			</foreach>
		</if>
		<if
			test="cancel_apply_date_start != null and cancel_apply_date_start != ''">
			AND cancel_apply_date &gt;= #{cancel_apply_date_start}
		</if>
		<if
			test="cancel_apply_date_end != null and cancel_apply_date_end != ''">
			AND cancel_apply_date &lt;= #{cancel_apply_date_end}
		</if>
		group by order_id
		order by cancel_apply_date desc
		limit #{startRowIndex},#{viewPostCntPerPage}
	</select>

	<select id="getPaymentModuleKeyByOrderId"
		resultType="com.finalProject.model.admin.order.AdminPaymentVO">
		SELECT
		o.payment_module_key AS payment_module_key,
		c.cancel_reason AS cancel_reason,
		SUM(DISTINCT op.paid_amount) AS paid_amount,
		SUM(DISTINCT op.assigned_point) AS assigned_point,
		c.cancel_type AS cancel_type,
		p.payment_method AS payment_method,
		p.payment_id AS payment_no
		FROM
		cancels c
		JOIN
		orders o ON c.order_id = o.order_id
		JOIN
		order_products op
		ON c.order_product_no = op.orderproduct_no
		JOIN
		payments p ON c.order_id
		= p.order_id
		<if test="list != null and list.size() > 0">
			WHERE c.order_product_no IN
			<foreach item="orderProductNo" collection="list" open="("
				separator="," close=")">
				#{orderProductNo}
			</foreach>
		</if>
	</select>
	<select id="getListByOrderId"
		resultType="com.finalProject.model.admin.order.AdminCancleVO">
		select * from cancels where order_id = #{orderId} and
		cancel_status = '취소 요청'
	</select>


	<update id="restractByCancelNo">
		update cancels set cancel_status = '관리자 철회' ,
		cancel_retract_date = NOW() where cancel_no = #{cancelNo}
	</update>

	<update id="updateCancelCompleteDate">
		update cancels set cancel_complete_date = now() , cancel_status = '취소 완료'
		where cancel_no IN
		<foreach item="cancel" collection="cancelList" open="("
			separator="," close=")">
			#{cancel}
		</foreach>
	</update>
	<insert id="insertRefund"
		parameterType="com.finalProject.model.admin.order.ModifyCancelStatusDTO">
		INSERT INTO
		refunds(cancel_no,payment_num,refund_type,refund_amount) VALUES
		(#{cancelNo},#{paymentNo},#{cancelType},#{amount})
	</insert>
	<select id="getOrderIdByCancelNo" resultType="String">
		select order_id from cancels where cancel_no in
		<foreach item="cancel" collection="cancelList" open="("
			separator="," close=")">
			#{cancel}
		</foreach>
		group by order_id
	</select>

	<select id="getExpectPayAmount"
		resultType="com.finalProject.model.admin.order.AdminPayOrdererVO">
		select
		total_price_expected , orderer_id,use_point,coupon_no
		from orders where order_id =
		#{orderId}
	</select>

	<insert id="refundPoint">
		insert into
		point_earned(member_id,earned_point,point_code)
		values(#{member_id},#{point},3)
	</insert>

	<update id="returnMemberPoint">
		update members set member_point = member_point +
		#{point} where member_id = #{member_id}
	</update>
	<insert id="refundEarnedPoint">
		insert into
		point_earned(member_id,earned_point,point_code)
		values(#{member_id},#{usePoint},3)
	</insert>
	<update id="refundMemberUsePoint">
		update members set member_point = member_point +
		#{usePoint} where member_id =#{member_id}
	</update>
	<delete id="deleteUseCoupon">
		DELETE FROM coupon_used WHERE coupon_no =
		#{coupon_no}
	</delete>
	<select id="memberLevelPoint" resultType="float">
		SELECT distinct
		l.level_point FROM orders o JOIN members m ON
		o.orderer_id = m.member_id JOIN levels l ON m.member_level =
		l.level_no WHERE o.order_id = #{orderId}
	</select>
	<insert id="restractPoint">
		insert into
		point_earned(member_id,earned_point,point_code)
		values(#{memberId},#{stealPoint},5)
	</insert>

	<update id="restractPointMember">
		update members set member_point = member_point - #{stealPoint} 
		where member_id = #{memberId}
	</update>
	<select id="findMemberId" resultType="String">
		SELECT m.member_id from members m JOIN orders o ON
		o.orderer_id = m.member_id WHERE order_id =
		#{orderId}
	</select>
</mapper>