<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.finalProject.mappers.noticeMapper">

<!-- 공지사항 목록 조회 -->
	<select id="getAllNotices" parameterType="map" resultType="NoticeDTO">
<!--         select notice_no, notice_title, admin_id, notice_type, reg_date -->
<!--         from notices where is_delete='N' and notice_type = 'N' order by reg_date desc -->
		select notice_no, notice_title, admin_id, notice_type, reg_date
		from notices where is_delete='N' and notice_type = 'N' order by reg_date desc
		LIMIT #{startRowIndex}, #{pagingSize}
    </select>

<!-- 이벤트 목록 조회 -->
	<select id="getAllEvents" parameterType="map" resultType="NoticeDTO">
        select notice_no, notice_title, admin_id, notice_type, reg_date
        from notices where is_delete='N' and notice_type = 'E' order by reg_date desc
        LIMIT #{startRowIndex}, #{pagingSize}
    </select>
    
<!--     공지사항 작성 -->
	<insert id="addNotice">
		insert into notices (notice_title, admin_id, notice_type, notice_content, reg_date)
		values (#{noticeTitle}, #{adminId}, #{noticeType}, #{noticeContent}, now())
	</insert>
	
<!--     이벤트 작성 -->
	<insert id="addEvent">
		insert into notices (notice_title, admin_id, notice_type, notice_content, reg_date, event_start_date, event_end_date, banner_image, thumbnail_image)
		values (#{notice_title}, #{admin_id}, #{notice_type}, #{notice_content}, now(), #{event_start_date}, #{event_end_date}, #{banner_image}, #{thumbnail_image})
	</insert>
    
<!-- 공지사항 조회 -->
    <select id="selectNoticeById" resultType="NoticeDTO">
		select notice_no, notice_type, notice_title, notice_content, reg_date, admin_id
		from notices where notice_no = #{noticeNo}
	</select>
	
<!-- 이벤트 조회 -->
    <select id="selectEventById" resultType="NoticeDTO">
		select notice_no, notice_type, notice_title, notice_content, reg_date, admin_id,
		thumbnail_image, event_start_date, event_end_date
		from notices where notice_no = #{noticeNo}
	</select>
	
<!-- 공지사항 수정 -->
	<update id="updateNotice" parameterType="NoticeDTO">
		update notices set notice_title = #{notice_title}, admin_id = #{admin_id},
		notice_content = #{notice_content}, notice_type = #{notice_type}
		where notice_no = #{notice_no}
	</update>
	
<!-- 이벤트 수정 -->
	<update id="updateEvent" parameterType="NoticeDTO">
		update notices set notice_title = #{notice_title}, admin_id = #{admin_id},
		notice_content = #{notice_content}, notice_type = #{notice_type}
		where notice_no = #{notice_no}
	</update>
	
<!-- 공지사항 삭제 -->
	<update id="deleteNotice" parameterType="int">
		update notices set is_delete = 'Y', notice_title='', notice_content=''
		where notice_no = #{notice_no}
	</update>
	
<!-- 이벤트 삭제 -->
	<update id="deleteEvent" parameterType="int">
		update notices set is_delete = 'Y', notice_title='', notice_content=''
		where notice_no = #{notice_no}
	</update>
	
<!-- 총 글(데이터) 수 -->
	<select id="getTotalPostCount" resultType="int">
		select count(*) from notices
		where is_delete='N' and notice_type = 'N'
    </select>

<!-- 페이지네이션이 적용된 공지 목록 조회 -->
    <select id="getNoticesWithPagination" resultType="NoticeDTO">
        SELECT notice_no, notice_title, admin_id, notice_type, reg_date
        FROM notices WHERE is_delete='N' AND notice_type = 'N' 
        ORDER BY reg_date DESC LIMIT #{offset}, #{limit}
    </select>
    
    <!-- 페이지네이션 검색어 -->
	<select id="countNotices" parameterType="SearchCriteriaDTO" resultType="int">
	    select count(*) FROM notices
	    <where>
	        <if test="searchType != null and searchWord != null">
	            and ${searchType} like concat('%', #{searchWord}, '%')
	        </if>
	    </where>
	</select>
	
	<select id="selectNotices" parameterType="map" resultType="NoticeDTO">
	    select * from notices
	    <where>
	        <if test="criteria.searchType != null and criteria.searchWord != null">
	            and ${criteria.searchType} like concat('%', #{criteria.searchWord}, '%')
	        </if>
	    </where>
	    order by reg_date desc
	    limit #{startRowIndex}, #{limit}
	</select>
    
<!-- 이벤트 이미지 db 저장 -->
<!-- 	<insert id="createEventImg"> -->
<!-- 	    insert into notices (notice_type, notice_title, notice_content, banner_image, thumbnail_image, reg_date, admin_id) -->
<!-- 	    values (#{noticeType}, #{noticeTitle}, #{noticeContent}, #{bannerImage}, #{thumbnailImage}, NOW(), #{adminId}) -->
<!-- 	</insert> -->
	
<!-- 	이벤트 배너 db 저장 -->
	<update id="updateBannerPath">
		update notices set banner_image = #{banner_image} where notice_no = #{notice_no}
	</update>
	
<!-- 	이벤트 썸네일 db 저장 -->
<!-- 	<update id="updateThumbnailPath"> -->
<!-- 		update notices set thumbnail_image = #{thumbnail_image} where notice_no = #{notice_no} -->
<!-- 	</update> -->
	
<!-- 	이벤트 url 저장 -->
	<update id="updateUrl">
		update notices set url = #{url} where notice_no = #{notice_no}
	</update>
	
<!-- 썸네일 이미지 저장 -->
	<insert id="insertEvent">
	    insert intonotices (notice_type, notice_title, notice_content, admin_id, reg_date, event_start_date, event_end_date)
	    values (#{noticeType}, #{noticeTitle}, #{noticeContent}, #{adminId}, NOW(), #{eventStartDate}, #{eventEndDate})
	</insert>
	
    <!-- 썸네일 경로 업데이트 쿼리 -->
    <update id="updateThumbnailPath">
        update notices set thumbnail_image = #{thumbnailImage}
        where notice_no = #{noticeNo}
    </update>

    <!-- 썸네일 삭제 쿼리 -->
    <update id="deleteThumbnail">
        update notices set thumbnail_path = null
        where notice_no = #{noticeNo}
    </update>
    
<!-- 메인 배너 index 출력 -->
    <select id="getBannersWithImages" resultType="NoticeDTO">
    select notice_title, banner_image, notice_no
    from notices where is_delete = 'N' and notice_type = 'E'
    order by reg_date desc limit 8
    </select>
</mapper>
  